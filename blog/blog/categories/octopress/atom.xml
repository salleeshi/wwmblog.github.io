<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | War Within Me]]></title>
  <link href="http://warwithinme.com/blog/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://warwithinme.com/blog/"/>
  <updated>2012-03-01T20:55:11+08:00</updated>
  <id>http://warwithinme.com/blog/</id>
  <author>
    <name><![CDATA[WWM]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[开始用Octopress写Blog]]></title>
    <link href="http://warwithinme.com/blog/2012/02/blogging-with-octopress/"/>
    <updated>2012-02-20T23:45:00+08:00</updated>
    <id>http://warwithinme.com/blog/2012/02/blogging-with-octopress</id>
    <content type="html"><![CDATA[<p>嗯, 貌似用<a href="http://octopress.org/">Octopress</a>的循例是将<strike>初夜</strike>(初篇)献给八爪君的各种触手.
那么我也来写写好了.</p>

<p>很多宅与Hacker都已经<strike>吐槽</strike>(解释)过如何打造自己的触手系博客了. 所以就再也没有必要在这个方面啰嗦啦, 还是说说日常的blog方面吧...</p>

<!-- more -->


<p>就算千辛万苦搭建好触手君, 写博文也不会立即变得好像抽根烟那么容易哎: <br/>
你要打开termial, 然后输入<code>rake new_post[oo_xx]</code>, 才能下笔.
接着还要各种<code>rake preview</code>来预览, 如果博文太多就需要<code>rake isolate[oo_xx]</code>来提高预览的速度.
最后还要<code>rake deploy</code>来发布.
我好似忘记了说, 新建一篇博文之后, 你还得打开那个目录(别告诉我你就放在桌面!!!), 来寻找那片博文, 这要点击多少次鼠标啊, 我的苍天.</p>

<p>这是彻彻底底违背了宅星人的第一法则 :
<blockquote><p>做事情要能懒则懒 (当然要做好, 不然老板炒鱿鱼就不要来找我寻仇哦)</p><footer><strong>宅星人第一法则</strong> <cite></cite></footer></blockquote></p>

<p>于是就写了些脚本, 好让写blog能爽快点, 当然光脚本也是绝对不够的, 我们还要请<a href="http://www.alfredapp.com/">alfred君</a>, (quicksilver娘因为傲娇到连我也受不了, 所以决定去和alfred君好), 当然还得为<a href="http://www.alfredapp.com/">alfred君</a>准备他的<a href="http://www.alfredapp.com/powerpack/">powerpack</a>, 不然就什么也做不到了.</p>

<h1>要解决的问题是:</h1>

<p><strong>既然都已经输入 <code>rake new_post[oo_xx]</code>, 为什么都不直接帮我打开, 让我编辑啊, 魂淡.</strong> 而且我还想要立刻就打开这个页面进行预览!!!!</p>

<p><strong>1.</strong>首先修改你的Rakefile, 将<code>task :preview</code>那一段修改成这样 :
<code>`` ruby task :preview
desc "preview the site in a web browser"
task :preview, :filename do |t, args|
  raise "### You haven't set anything up yet. First run</code>rake install` to set up an Octopress theme." unless File.directory?(source_dir)
  puts "Starting to watch source with Jekyll and Compass. Starting Rack on port #{server_port}"
  system "compass compile --css-dir #{source_dir}/stylesheets" unless File.exist?("#{source_dir}/stylesheets/screen.css")
  jekyllPid = Process.spawn({"OCTOPRESS_ENV"=>"preview"}, "jekyll --auto")
  compassPid = Process.spawn("compass watch")
  rackupPid = Process.spawn("rackup --port #{server_port}")</p>

<p>  filename = args[:filename] || ""
  system "sleep 2; open http://localhost:4000/blog#{filename}"</p>

<p>  trap("INT") {</p>

<pre><code>[jekyllPid, compassPid, rackupPid].each { |pid| Process.kill(9, pid) rescue Errno::ESRCH }
exit 0
</code></pre>

<p>  }</p>

<p>  [jekyllPid, compassPid, rackupPid].each { |pid| Process.wait(pid) }
end
<code>``
主要就是将</code>task :preview<code>改成</code>task :preview, :filename do |t, args|<code>  
然后在里面添加了</code>filename = args[:filename] || ""<code>和</code>system "sleep 2; open http://localhost:4000/blog#{filename}"` 这样就能在预览的时候直接在浏览器打开blog.</p>

<p><strong>2.</strong>接着去下载这个gist, 放到你存放Rakefile的目录里面. 这个gist的工作是创建文章, 打开文章, 预览文章:
<div><script src='https://gist.github.com/1874539.js?file='></script>
<noscript><pre><code>#!/usr/bin/env ruby
# encoding: utf-8
#
# EDITOR = &quot;subl&quot; is for SublimeText2
# EDITOR = &quot;mvim&quot; is for MacVim
# EDITOR = &quot;mate&quot; is for TextMate
#

require 'rake'

EDITOR   = &quot;subl&quot;
POST_DIR = &quot;/source/_posts&quot;
PREVIEW  = true


# Create new file
new_title = ARGV[0]
rake_new_post = &quot;new_post[\&quot;#{new_title}\&quot;]&quot;
puts &quot;Running: &quot; + rake_new_post
new_result = %x[rake #{rake_new_post}]

# Isolate new file
title_slug   = new_result.split(&quot;/&quot;)
new_post     = title_slug[2].strip

rake_isolate = &quot;isolate[#{new_post}]&quot;
puts &quot;Running: &quot; + rake_isolate
isolate_result = %x[rake #{rake_isolate}]

# Open new file
open_cmd = EDITOR + &quot; &quot; + Dir.pwd + POST_DIR + &quot;/&quot; + new_post
system(open_cmd)

# Preview
if PREVIEW == true then
    puts &quot;Peady to preview...&quot;
    preview_path = &quot;/&quot; + File.basename(new_post, '.*').gsub(&quot;-&quot;, &quot;/&quot;) + &quot;/&quot;
    exec &quot;rake preview[#{preview_path}]&quot;
end
</code></pre></noscript></div>
</p>

<p><strong>3.</strong>翻出你的<a href="http://www.alfredapp.com/">alfred君</a>, 添加一个Shell Script Extension:</p>

<ul>
<li>Title : 创建博文</li>
<li>Description: (留空即可)</li>
<li>Keyword : newpost</li>
<li>Options : (<strong>全不选!</strong>)</li>
<li>Advanced : (<strong>同样全部不选!</strong>)</li>
<li>Parameter : 选 "Required Parameter"</li>
</ul>


<p>然后Command里面输入 : (当然<code>/Your/Path/To/Rakefile/Folder</code>要换成你存放Rakefile的目录)</p>

<pre><code>cd /Your/Path/To/Rakefile/Folder
./newpost.rb "{query}"
</code></pre>

<p>这样, 准备功夫就完成了. 下面就试试吧 :
翻出<a href="http://www.alfredapp.com/">alfred君</a>, 然后输入<code>newpost my fancy new post</code>(是真的不用双引号哦~), 回车... <strike>好基友</strike><a href="http://www.sublimetext.com/2">SublimeText2</a>是不是就弹出来让你操纵呢...</p>

<h4>其他一些问题:</h4>

<ol>
<li><p>如果想用其他编辑器来编辑, 则需要将<code>newpost.rb</code>里面的<code>EDITOR = "subl"</code>换成 :</p>

<ul>
<li><code>EDITOR = "mvim"</code> (换成MacVim)</li>
<li><code>EDITOR = "mate"</code> (换成TextMate)</li>
</ul>
</li>
<li><p>因为博客不是放在根目录里, 只能<code>rake preview</code>的方法来预览, 否则加载的文件的路径都错了... 可惜目前没找到能让<a href="http://livereload.com/">LiveReload</a>来刷新页面的方法, sign.</p></li>
<li><strong>用了这个脚本, 在准备更新到服务器之前的那次<code>rake generate</code>之前, 必须先<code>rake integrate</code>. 否则只有新建的那个blog文哦.</strong></li>
<li>要用<a href="http://www.sublimetext.com/2">SublimeText2</a>之前还得先在terminal运行一下代码, 这样才能用它的命令行工具:
<code>bash
sudo ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" /bin/subl
</code></li>
</ol>


<h1>呼, 好累哎, 睡觉先 =, =</h1>
]]></content>
  </entry>
  
</feed>
