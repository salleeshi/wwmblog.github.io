.page4 {
  padding: 80px 0;
  
  .page {
    width     : 100%;
    max-width : 100%;
  }
}

$hexagonA : 120px;
$hexagonS : ceil($hexagonA / 1.73);
$hexagonMarginT : 20px;
$hexagonMarginL : 10px;

.work-piece {

  float    : left;
  position : relative;

  width       : $hexagonA;
  height      : $hexagonS * 2;
  margin-top  : -$hexagonMarginT;
  margin-left : $hexagonMarginL;
  
  @include transition(opacity 0.3s linear 0.15s);
  
  &:nth-of-type(7n+1) { margin-left : 0; }
  &:nth-of-type(7n+5) { margin-left : round($hexagonA / 2) + 5px; }

  canvas {
    position   : relative;
    width      : $hexagonA;
    height     : $hexagonS * 2;
  }

  &.hover {
    opacity : 1 !important;
  }
  &.link-hover {
    cursor : pointer;
  }
}

.work-link {

  @extend .sprite;

  $circleR : 16px;
  $cos30   : 0.866;
  $sin30   : 0.5;
  
  $centerLength : $hexagonS * $cos30 - $circleR;

  width         : $circleR * 2;
  height        : $circleR * 2;
  border-radius : 50%;
  position      : absolute;
  
  $top  : ceil($hexagonS      - $centerLength * $cos30 - $circleR);
  $left : floor($hexagonA / 2 + $centerLength * $sin30 - $circleR);
  
  top  : $top;
  left : $left;

  .work-piece.hover & {
    @include transform(translate(10px, -12px));
  }

  .work-piece.link-hover & {
    background-position : 0 -32px;
  }

  -webkit-transition : -webkit-transform .3s ease-in;
     -moz-transition :    -moz-transform .3s ease-in;
       -o-transition :      -o-transform .3s ease-in;
          transition :         transform .3s ease-in;
}

.work-link-r {
  display  : none;
  width    : 16px;
  height   : 16px;
  position : absolute;
  left     : 77px;
  top      : 5px;
  
  .work-piece.link-hover & {
    display : block;
  }
}

$workHeapPaddingR   : 200px;
$workHeapMarginMinH : 40px;

.work-heap {
  margin     : auto;
  list-style : none;
  padding    : 30px $workHeapPaddingR 150px 0;
  max-width  : 4 * $hexagonA + 30px;
  position   : relative;
  
  &.hover {
    .work-piece {
      opacity : 0.3;
    }
  }

  > p {
    position  : absolute;
    width     : 220px;
    right     : -40px;
    top       : 0;
    font-size : 12px;
    color     : #413D32;
  }
}

$piece-four-width  : $workHeapMarginMinH * 2 + $hexagonA * 4 + $hexagonMarginL * 3 + $workHeapPaddingR;
$piece-three-width : $workHeapMarginMinH * 2 + $hexagonA * 3 + $hexagonMarginL * 2 + $workHeapPaddingR;
$piece-two-width   : $hexagonA * 3 + $hexagonMarginL * 2;

@media (min-width:$piece-two-width + 1) and (max-width:$piece-four-width) {
  .work-piece {
    margin-left : 10px !important;
    
    &:nth-of-type(5n+1) { margin-left : 0 !important; }
    &:nth-of-type(5n+4) { margin-left : round($hexagonA / 2) + 5px !important; }
  }
  .work-heap {
    max-width : 3 * $hexagonA + 20px;
  }
}

@media (max-width:$piece-three-width) {
  .work-heap {
    padding-right : 0;
  }
}

@media (max-width:$piece-two-width) {
  .work-piece {
    margin-left : 10px !important;
    
    &:nth-of-type(4n+1) { margin-left : 0 !important; }
    &:nth-of-type(4n+3) { margin-left : round($hexagonA / 2) + 5px !important; }
  }
  .work-heap {
    max-width : 2 * $hexagonA + 10px + round($hexagonA / 2) + 5px;
  }
}
