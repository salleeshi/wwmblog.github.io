@mixin Center ($parent, $inner, $child) {
    #{$parent} {
        display: table;
        width: 100%;
        height: 100%;
    }

    #{$inner} {
        display: table-cell;
        vertical-align: middle;
        position: relative;
    }

    #{$child} {
        margin-left: auto;
        margin-right: auto;
    }
}

@mixin ClearFix {
    overflow : hidden;
    display  : inline-block;
    display  : block;
}

@mixin BorderRadius($radius) {
    -moz-border-radius:    $radius;
    -webkit-border-radius: $radius;
    border-radius:         $radius;
}

@mixin BoxShadow($shadow) {
    -moz-box-shadow:    #{$shadow};
    -webkit-box-shadow: #{$shadow};
    box-shadow:         #{$shadow};
}
@mixin Transition($transition) {
    -moz-transition: $transition;
    -webkit-transition: $transition;
    -o-transition: $transition;
    -ms-transition: $transition;
    transition : $transition;
}

@mixin SizingBorderBox {
    -moz-box-sizing:    border-box;
    -webkit-box-sizing: border-box;
    box-sizing:         border-box;
}

@mixin HandCursor {
    cursor: #{"hand"};
    cursor: pointer;
}

@mixin ReverseLink($linkSel, $hoverColor, $hoverBgColor) {
    #{$linkSel} {
        padding : 2px;
        color   : $hoverBgColor;

        &:hover {
            text-shadow : none;
            color       : $hoverColor;
            background  : $hoverBgColor;
            text-decoration: none;
            @include BorderRadius(3px);
        }
    }
}

@mixin Transform ($var) {
    -o-transform      : $var;
    -moz-transform    : $var;
    -webkit-transform : $var;
    transform         : $var;
}

@mixin LinearBackground($colors) {

    $g : "linear-gradient(" + $colors + ")";

    background: #{ "-webkit-" + $g };
    background: #{ "-moz-" + $g };
    background: #{ "-ms-" + $g };
    background: #{ "-o-" + $g };
    background: #{ $g };
}

@mixin Stripe($degree, $stripSize, $colors) {

    @if (length($colors) < 2) {
        @warn "Strip uses at least two colors";
    }

    background-size   : $stripSize * length($colors) $stripSize * length($colors);
    background-repeat : repeat;

    $index  : 1;
    $c      : nth($colors, 1);
    $divide : 50 / length($colors);
    $stop   : 0% + $divide;
    $result : "," + $c + " " + $stop;

    $colors : join($colors, $colors);
    $cCount : length($colors);

    @while $index < $cCount {
        $index  : $index + 1;
        $c      : nth($colors, $index);
        $result : $result + "," + $c + " " + $stop;
        $stop   : $stop + $divide;
        $result : $result + "," + $c + " " + $stop;
    }

    background-image: -webkit-linear-gradient($degree #{$result});
    background-image: -moz-linear-gradient($degree #{$result});
    background-image: -ms-linear-gradient($degree #{$result});
    background-image: -o-linear-gradient($degree #{$result});
    background-image: linear-gradient($degree #{$result});
}
